service: ${self:custom.fixtureEnvVars.EnvironmentName}-olympics-odf-processor

package:
  patterns:
    - '!./**'
    - src/**
    - '!./src/test'

custom:
  config: ${file(${env:configFilePath})}
  resourceTags: ${self:custom.config.ResourceTags}
  fixtureEnvVars: ${self:custom.config.FixtureEnvVars}

  # Extracts applicable environment variables from config
  sourceArtifactBucket: ${self:custom.fixtureEnvVars.SourceArtifactBucketName}
  awsRegion: ${self:custom.fixtureEnvVars.AwsRegion}
  awsAccountId: ${self:custom.fixtureEnvVars.AwsAccountId}
  permissionsBoundary: ${self:custom.fixtureEnvVars.PermissionsBoundary}

  serviceShortName: 'olympics-odf-processor'
  serviceStage: ${env:ServiceStage, 'green'}
  resourceSsmPrefix: ${self:custom.fixtureEnvVars.ResourceSsmPrefix}
  resourceNamePrefix: ${self:custom.fixtureEnvVars.ResourceNamePrefix}
  stackResourcePrefix: ${self:custom.resourceNamePrefix}-${self:custom.serviceStage}-${self:custom.serviceShortName}
  stackSsmPrefix: ${self:custom.resourceSsmPrefix}/${self:custom.serviceStage}/${self:custom.serviceShortName}

  requestIntakeQueue: ${ssm:${self:custom.resourceSsmPrefix}/main/olympics-events-ingester/event_processor_queue_arn}
  eventCalendarServiceIngestQueueArn: ${ssm:${self:custom.resourceSsmPrefix}/main/event-calendar-service/sqs_queue_arn}
  eventCalendarServiceIngestQueueUrl: ${ssm:${self:custom.resourceSsmPrefix}/main/event-calendar-service/sqs_queue_url}
  sluggingServiceApiKey: ${ssm:${self:custom.resourceSsmPrefix}/main/slugging-service/internal/apikey~true}
  sluggingServiceUrl: https://${self:custom.fixtureEnvVars.ApiGatewayCustomDomainName}/slugs
  contentMappingApiKey: ${ssm:${self:custom.resourceSsmPrefix}/main/content-mapping-service/internal/apikey~true}
  contentMappingServiceUrl: https://${self:custom.fixtureEnvVars.ApiGatewayCustomDomainName}/mapping
  sphinxAuthTokenPath: ${self:custom.fixtureEnvVars.ResourceSsmPrefix}/main/deployment/sphinx/current_auth_token
  odfBucket: ${ssm:${self:custom.resourceSsmPrefix}/main/file_feed_artifact_bucket}

  subnetIds: ${self:custom.fixtureEnvVars.SubnetIds}
  securityGroupIds:
    - ${ssm:${self:custom.resourceSsmPrefix}/main/platform/elasticache/security_group_id}

  redisUrl: ${ssm:${self:custom.resourceSsmPrefix}/main/platform/elasticache/readonly/address}
  redisPort: ${ssm:${self:custom.resourceSsmPrefix}/main/platform/elasticache/readonly/port}
  redisPassword: ${ssm:${self:custom.resourceSsmPrefix}/main/deployment/elasticache/password~true}

provider:
  name: aws
  region: ${self:custom.awsRegion}
  stage: ${self:custom.serviceStage}
  stackName: ${self:custom.stackResourcePrefix}-stack
  runtime: nodejs14.x
  deploymentBucket:
    name: ${self:custom.sourceArtifactBucket}
  tracing:
    lambda: true
  tags: ${self:custom.resourceTags}
  stackTags: ${self:custom.resourceTags}
  kmsKeyArn: ${ssm:${self:custom.fixtureEnvVars.ResourceSsmPrefix}/main/platform/cmk/arn}
  vpc:
    subnetIds: ${self:custom.subnetIds}
    securityGroupIds: ${self:custom.securityGroupIds}
  versionFunctions: false

functions:
  olympics-odf-processor:
    name: ${self:custom.stackResourcePrefix}
    handler: src/index.handler
    role: OdfProcessorServiceRole
    memorySize: 512
    timeout: 600
    events:
      - sqs:
          arn: ${self:custom.requestIntakeQueue}
          enabled: true
    environment:
      LOG_LEVEL: INFO
      REDIS_ADDRESS: ${self:custom.redisUrl}
      REDIS_PORT: ${self:custom.redisPort}
      REDIS_AUTH: ${self:custom.redisPassword}
      REDIS_KEYPATH_PREFIX: ${self:custom.resourceSsmPrefix}
      SLUGGING_SERVICE_URL: ${self:custom.sluggingServiceUrl}
      SLUGGING_SERVICE_API_KEY: ${self:custom.sluggingServiceApiKey}
      CONTENT_MAPPING_SERVICE_URL: ${self:custom.contentMappingServiceUrl}
      CONTENT_MAPPING_SERVICE_API_KEY: ${self:custom.contentMappingApiKey}
      ODF_BUCKET: ${self:custom.odfBucket}
      API_REQUEST_BATCH_SIZE: 25
      INGESTION_BATCH_SIZE: 25
      EVENT_CALENDAR_SERVICE_INGEST_QUEUE: ${self:custom.eventCalendarServiceIngestQueueUrl}
      SPHINX_AUTH_TOKEN_PATH: ${self:custom.sphinxAuthTokenPath}
      CURRENT_ENVIRONMENT: ${self:custom.fixtureEnvVars.EnvironmentName}
      REGION: ${self:custom.awsRegion}
resources:
  - ${file(cfn_resources/lambda_iam_role.yml)}